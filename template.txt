//NislandsX := 6
NislandsY := NislandsX
edge := 0.75e-7

gap := 1e-07
width1 := 200e-9 

c := 5e-9
cz := 5e-9
WislandsX := NislandsX * (width1+gap) - gap
WislandsY := (NislandsY) * (width1+gap) 

Nxx := trunc((WislandsX + edge) / c)
Nyy := trunc((WislandsY + edge) / c)
Nx := Nxx + 5
Ny := Nyy + 5
Nz := 2

setGridSize(Nx, Ny, Nz)
setCellSize(c, c, cz)

Ms := 800e3
Msat = Ms
Aex = 1.07e-11
alpha = 0.01
EdgeSmooth = 8

center1 := cylinder(width1, 10e-9)
island_temp1 := center1




island1 := universe().sub(universe())


island1 = island_temp1.transl(-WislandsX/2+(width1)/2, -WislandsY/2+(width1)/2, 0)
islands := universe().sub(universe())

l := 1
in := 0
for i := 1; i <= NislandsX; i++ {
	for j := 1; j <= NislandsY ; j++ {
		k := i - 1
		n := j - 1


		tempisland := island1.transl(k*(width1+gap), n*(width1+ gap), 0)
		print(n*(width1+ gap))
		islands = islands.add(tempisland)
		defregion(l, tempisland)
		xTransl1 := -WislandsX/2 + (width1)/2
		yTransl1 := -WislandsX/2 + (width1)/2
		zTransl := 0
		xTransl2 := k * (width1 + gap)
		yTransl2 := n * (width1 + gap)
		m.setRegion(l, vortex(-1, 1).transl(xTransl1+xTransl2, yTransl1+yTransl2, zTransl))
	


		tableadd(m.Region(l))
		l++
		in++
	}
}


epsilon := 0.25
for i := 1; i <= l; i++ {
	fixedlayer.setRegion(i, vector(0, 0, 1))
	lambda.setRegion(i, 1.5)
	Pol.setRegion(i, 0.2)
	epsilonprime.setRegion(i, epsilon)
	J.setregion(i, vector(0, 0, -5e10*heaviside(t - 5e-9)))
}

//B_ext = vector(0, 0, 0.2)
setgeom(islands)
snapshot(geom)
DisableZhangLiTorque = true
relax()
Jtot := 0.015
area1 := pow(width1/2, 2) * pi

B_ext = vector(0.002*(heaviside(t - 5e-9)-1), 0.002*(heaviside(t - 5e-9)-1), 0) 
relax()
tableadd(J.Region(1))
// tableadd(sttorque.Region(1))
tableadd(E_total)
tableautosave(3e-12)
run(700e-9)
